/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSDocument.h"

#import "DVTStateRepositoryDelegate-Protocol.h"
#import "DVTStatefulObject-Protocol.h"
#import "DVTTabbedWindowCreation-Protocol.h"
#import "IDEMustCloseOnQuitDocument-Protocol.h"
#import "IDEWorkspaceDelegate-Protocol.h"

@class DVTDelayedValidator, DVTStackBacktrace, DVTStateRepository, DVTStateToken, IDEActivityReportManager, IDEContextAutocreationController, IDEWorkspace, IDEWorkspaceWindowController, NSArray, NSDictionary, NSHashTable, NSMapTable, NSMutableArray, NSMutableDictionary, NSMutableSet;

@interface IDEWorkspaceDocument : NSDocument <IDEWorkspaceDelegate, DVTTabbedWindowCreation, DVTStatefulObject, DVTStateRepositoryDelegate, IDEMustCloseOnQuitDocument>
{
    DVTStackBacktrace *_invalidationBacktrace;
    DVTStateRepository *_stateRepository;
    DVTStateToken *_stateToken;
    IDEContextAutocreationController *_contextAutocreationController;
    IDEWorkspace *_workspace;
    IDEWorkspaceWindowController *_lastActiveWorkspaceWindowController;
    NSMutableArray *_recentEditorDocumentURLs;
    NSHashTable *_allRecentEditorDocumentURLs;
    NSMutableDictionary *_defaultEditorStateTree;
    NSMutableDictionary *_defaultPrimaryEditorFrameSizes;
    NSMutableSet *_editedDocuments;
    DVTDelayedValidator *_stateSavingDelayedValidator;
    IDEActivityReportManager *_activityReportManager;
    id <DVTObservingToken> _runContextsObservingToken;
    id <DVTObservingToken> _isWorkspaceIdleToken;
    id <DVTObservingToken> _launchSessionsObservingToken;
    id <DVTObservingToken> _launchSessionsRunnablePIDObservingToken;
    id <DVTObservingToken> _applicationIsQuittingObserver;
    NSMapTable *_hasGUIValueForLaunchSessionMap;
    NSDictionary *_previousSessionActiveRunContextInfo;
    NSDictionary *_previousSessionActiveRunDestinationInfo;
    id _upgradeCompletionBlock;
    NSMutableArray *_stateChangeObservingTokens;
    NSMutableDictionary *_tabStateContextForTabNameMap;
    int _debuggingWindowBehavior;
    BOOL _lastWorkspaceWindowHasStartedClosing;
    BOOL _applicationIsTerminating;
    BOOL _isClosing;
    BOOL _isInvalidated;
    BOOL _userWantsAppFocusInMiniDebugging;
    BOOL _userWantsMiniDebuggingConsole;
    BOOL _didSetupUISubsystems;
    BOOL _isCheckingCanClose;
}

+ (long long)_maximumRecentEditorDocumentCount;
+ (void)_setMaximumRecentEditorDocumentCount:(long long)arg1;
+ (long long)_unlimitedMaximumRecentEditorDocumentCountMarker;
+ (BOOL)autosavesInPlace;
+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (id)documentForWorkspace:(id)arg1;
+ (id)documentTypeName;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingUserWantsBreakpointsActivated;
+ (BOOL)preservesVersions;
+ (long long)version;
- (void)_activateTargetProcess:(id)arg1 tryCounter:(long long)arg2;
- (void)_addRecentEditorDocumentURL:(id)arg1;
- (id)_allRecentEditorDocumentURLs;
- (void)_cacheDefaultEditorStateDictionary:(id)arg1 forDocumentExtensionIdentifier:(id)arg2 forDocumentURL:(id)arg3;
- (BOOL)_canCloseWorkspaceDocument;
- (BOOL)_checkAutosavingPossibilityAndReturnError:(id *)arg1;
- (void)_clearRecentEditorDocumentURLs;
- (BOOL)_closeAfterSavingDirtyEditorDocumentsWithCancelButton:(BOOL)arg1;
- (void)_container:(id)arg1 didChangeFromFilePath:(id)arg2 toFilePath:(id)arg3;
- (id)_defaultEditorStateDictionaryForDocumentExtensionIdentifier:(id)arg1 forDocumentURL:(id)arg2;
- (struct CGSize)_defaultPrimaryEditorFrameSizeForDocumentURL:(id)arg1;
- (void)_delayedActivateTargetProcess:(id)arg1;
- (id)_dirtyDocuments;
- (id)_editedDocuments;
- (void)_editorDocumentWillClose:(id)arg1;
- (BOOL)_isXcodeActiveAndTargetInRunningState:(id)arg1;
- (id)_makeTabbedWindowControllerShowingWindow:(BOOL)arg1 withIdentifier:(id)arg2 createNewTabUponLoadIfNoTabsExist:(BOOL)arg3;
- (void)_makeTabbedWindowControllerWithStateFromTabController:(id)arg1 documentURL:(id)arg2 simpleEditorWindowLayout:(BOOL)arg3 frontmost:(BOOL)arg4 completionBlock:(id)arg5;
- (BOOL)_readFromURL:(id)arg1 ofType:(id)arg2 simpleFilesFocused:(BOOL)arg3 error:(id *)arg4;
- (void)_recordWorkspaceStatistics;
- (id)_recreateTabNamed:(id)arg1 withTabStateContext:(id)arg2 shouldRecreateWindowIfNeeded:(BOOL)arg3;
- (void)_restoreActiveRunContextIfPossible;
- (void)_setDefaultPrimaryEditorFrameSize:(struct CGSize)arg1 forDocumentURL:(id)arg2;
- (void)_setLaunchSessionToIntensiveFileIODoneStateIfNecessary:(id)arg1;
- (void)_setWorkspace:(id)arg1;
- (void)_setupLaunchSessionsObservation;
- (BOOL)_shouldShowAutosaveButtonForWindow:(id)arg1;
- (id)_stateSavingCustomDataSpecifier;
- (id)_tabStateContextForTabController:(id)arg1 owningWindowController:(id)arg2;
- (void)_upgradeAlertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)_willEditDocument:(id)arg1;
- (void)_workspace:(id)arg1 didChangeFinishedLoadingTo:(BOOL)arg2;
- (void)_workspace:(id)arg1 didChangeSimpleFilesFocusedTo:(BOOL)arg2;
- (void)_workspace:(id)arg1 failedToResolveContainerForProjectFile:(id)arg2;
- (void)_workspaceDocument:(id)arg1 didSave:(BOOL)arg2 contextInfo:(void *)arg3;
- (void)activateTargetProcess;
@property(readonly) NSDictionary *activeRunContextInfo;
@property(readonly) NSDictionary *activeRunDestinationInfo;
- (id)activeWorkspaceWindowController;
@property(readonly) IDEActivityReportManager *activityReportManager;
- (void)addWindowController:(id)arg1;
@property BOOL applicationIsTerminating; // @synthesize applicationIsTerminating=_applicationIsTerminating;
- (BOOL)canCloseDocumentAtQuit;
- (void)canCloseDocumentWithDelegate:(id)arg1 shouldCloseSelector:(SEL)arg2 contextInfo:(void *)arg3;
- (BOOL)checkAutosavingSafetyAndReturnError:(id *)arg1;
- (void)close;
- (void)commitStateToDictionary:(id)arg1;
- (void)configureStateSavingObservers;
- (id)dataOfType:(id)arg1 error:(id *)arg2;
@property int debuggingWindowBehavior; // @synthesize debuggingWindowBehavior=_debuggingWindowBehavior;
- (id)displayName;
- (void)duplicateDocument:(id)arg1;
- (id)dvtExtraBindings;
- (void)dvt_shouldCollect;
- (BOOL)hasBeenEditedSinceLastUserInitiatedSave;
- (void)ideEditorDocument:(id)arg1 shouldClose:(BOOL)arg2 contextInfo:(void *)arg3;
- (id)init;
- (id)initForURL:(id)arg1 withContentsOfURL:(id)arg2 ofType:(id)arg3 error:(id *)arg4;
- (id)initWithType:(id)arg1 error:(id *)arg2;
- (id)initWithWorkspace:(id)arg1;
- (void)insertInSdefSupport_Xcode3FileReferences:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_Xcode3Groups:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_breakpoints:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_buildMessages:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_fileReferences:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_groups:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_itemReferences:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_projects:(id)arg1 atIndex:(long long)arg2;
- (void)insertInSdefSupport_runContexts:(id)arg1 atIndex:(long long)arg2;
@property(readonly) DVTStackBacktrace *invalidationBacktrace; // @synthesize invalidationBacktrace=_invalidationBacktrace;
@property(readonly, getter=isClosed) BOOL closed;
- (id)makeTabbedWindowControllerShowingWindow:(BOOL)arg1;
- (void)makeWindowControllers;
- (id)newScriptingObjectOfClass:(Class)arg1 forValueForKey:(id)arg2 withContentsValue:(id)arg3 properties:(id)arg4;
- (id)objectSpecifier;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(copy) NSArray *orderedWindowControllerNames;
- (BOOL)prepareSavePanel:(id)arg1;
- (void)printDocument:(id)arg1;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (BOOL)readFromData:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readStateData;
@property(readonly) NSArray *recentEditorDocumentURLs;
- (void)removeWindowController:(id)arg1;
- (void)revertDocumentToSaved:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)runPageLayout:(id)arg1;
- (void)saveAsWorkspace:(id)arg1;
- (void)saveAsWorkspace:(id)arg1 showAlert:(BOOL)arg2 completionBlock:(id)arg3;
- (void)saveDocument:(id)arg1;
- (void)saveDocumentAs:(id)arg1;
- (void)saveDocumentTo:(id)arg1;
- (BOOL)saveToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (id)sdefSupport_Xcode3FileReferences;
- (id)sdefSupport_Xcode3Groups;
- (id)sdefSupport_breakpoints;
- (BOOL)sdefSupport_breakpointsEnabled;
- (id)sdefSupport_build:(id)arg1;
- (id)sdefSupport_clean:(id)arg1;
- (id)sdefSupport_fileBreakpoints;
- (id)sdefSupport_fileReferenceForPath:(id)arg1;
- (id)sdefSupport_fileReferences;
- (id)sdefSupport_groups;
- (id)sdefSupport_intermediatesDirectory;
- (id)sdefSupport_productDirectory;
- (id)sdefSupport_projects;
- (id)sdefSupport_symbolicBreakpoints;
- (void)setLastActiveWorkspaceWindowController:(id)arg1;
- (void)setSdefSupport_breakpointsEnabled:(BOOL)arg1;
- (void)setSdefSupport_intermediatesDirectory:(id)arg1;
- (void)setSdefSupport_productDirectory:(id)arg1;
@property(copy) NSDictionary *stateSavingDefaultEditorStatesForURLs;
@property(copy) NSArray *stateSavingRecentEditorDocumentURLs;
@property DVTStateToken *stateToken; // @synthesize stateToken=_stateToken;
@property NSMutableDictionary *tabStateContextForTabNameMap; // @synthesize tabStateContextForTabNameMap=_tabStateContextForTabNameMap;
@property BOOL userWantsAppFocusInMiniDebugging; // @synthesize userWantsAppFocusInMiniDebugging=_userWantsAppFocusInMiniDebugging;
@property BOOL userWantsBreakpointsActivated;
@property BOOL userWantsMiniDebuggingConsole; // @synthesize userWantsMiniDebuggingConsole=_userWantsMiniDebuggingConsole;
- (void)setupUISubsystems;
- (id)showTabNamed:(id)arg1 createIfNotFound:(BOOL)arg2;
@property(readonly) DVTStateRepository *stateRepository; // @synthesize stateRepository=_stateRepository;
- (void)stateRepositoryDidChange:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)windowControllerWindowWillClose:(id)arg1;
- (id)windowControllerWithUniqueIdentifier:(id)arg1;
@property(readonly) IDEWorkspace *workspace;
- (void)writeStateData;
- (void)writeStateIfNeeded;

@end

