/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <IDEKit/IDEViewController.h>

#import "DVTCompletingTextViewDelegate-Protocol.h"
#import "DVTFindBarHostable-Protocol.h"
#import "DVTScopeBarHost-Protocol.h"
#import "IDEConsoleTextViewStandardIODelegate-Protocol.h"
#import "IDEDebuggerBarConsoleInfoProvider-Protocol.h"

@class DVTFindBar, DVTScopeBarController, DVTScopeBarView, DVTScopeBarsManager, IDEConsoleTextView, IDEWorkspaceDocument, NSButton, NSMutableArray, NSMutableSet, NSPopUpButton, NSScrollView, NSSegmentedControl, NSString, NSView;

@interface IDEConsoleArea : IDEViewController <DVTFindBarHostable, DVTScopeBarHost, IDEConsoleTextViewStandardIODelegate, IDEDebuggerBarConsoleInfoProvider, DVTCompletingTextViewDelegate>
{
    DVTScopeBarView *_scopeBar;
    IDEConsoleTextView *_consoleView;
    NSPopUpButton *_filterModePopUpButton;
    NSButton *_clearConsoleButton;
    NSSegmentedControl *_swapButton;
    IDEWorkspaceDocument *_workspaceDocument;
    double _clearConsoleButtonSeparation;
    NSMutableArray *_inputHistoryForDebugger;
    unsigned long long _inputHistoryIndexForDebugger;
    NSString *_userEnteredTextBeforeShowingCommandHistory;
    NSMutableSet *_consoleAdaptors;
    double _lastClearTime;
    id <DVTObservingToken> _workspaceDocumentObserverToken;
    id <DVTObservingToken> _launchSessionObservingToken;
    id <DVTObservingToken> _consoleAdaptorsObservingToken;
    id <DVTObservingToken> _debugSessionStateObservingToken;
    id <DVTObservingToken> _debuggingWindowBehaviorObservingToken;
    id <DVTObservingToken> _userWantsMiniDebuggingConsoleObservingToken;
    id <DVTObservingToken> _debugSessionObservingToken;
    DVTFindBar *_findBar;
    DVTScopeBarController *_findScopeBarController;
    DVTScopeBarsManager *_scopeBarsManager;
    struct _NSRange _originalSelection;
    id _findStringChangedNotificationToken;
    int _filterMode;
    BOOL _shouldShowLayoutControl;
    BOOL _hasNewInterestingOutput;
}

+ (void)configureStateSavingObjectPersistenceByName:(id)arg1;
+ (long long)version;
- (void)_addConsoleAdaptors:(id)arg1;
- (void)_appendItem:(id)arg1;
- (void)_appendItems:(id)arg1;
- (void)_assertUnsupportedAction;
- (void)_clearText;
- (id)_createFindBar;
- (void)_dealWithConsoleAdaptorsKVOChange:(id)arg1;
- (void)_debugSessionStateChanged;
- (void)_debuggingWindowBehaviorChanged;
- (void)_filterChanged;
- (id)_findBar;
- (void)_installCompletionStrategiesBasedOnDebugger;
- (void)_installFindBar;
- (void)_invalidateFindBarResults;
- (BOOL)_isFindBarInstalled;
- (void)_outputForConsole:(id)arg1;
- (void)_removeConsoleAdaptors:(id)arg1;
- (void)_removeCurrentConsoleAdaptors;
- (void)_removeObserverForConsoleAdaptor:(id)arg1;
- (void)_setWorkspaceDocument:(id)arg1;
- (BOOL)_shouldAppendItem:(id)arg1;
- (id)_sortedCompletionStrategiesForDebuggerIdentifier:(id)arg1;
- (void)_updateShowLayoutControl:(int)arg1;
- (void)activateConsole;
- (BOOL)becomeFirstResponder;
- (void)clearConsole:(id)arg1;
- (void)commitStateToDictionary:(id)arg1;
- (void)completingTextView:(id)arg1 willPassContextToStrategies:(id)arg2 atWordStartLocation:(unsigned long long)arg3;
- (void)consoleView:(id)arg1 didEndText:(id)arg2 forDebugger:(BOOL)arg3;
- (BOOL)delegateFirstResponder;
- (void)dismissFindBar:(id)arg1 andRestoreSelection:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (BOOL)dvtFindBar:(id)arg1 validateUserInterfaceItem:(id)arg2;
@property int filterMode; // @synthesize filterMode=_filterMode;
- (void)find:(id)arg1;
- (void)findAndReplace:(id)arg1;
- (void)findNext:(id)arg1;
- (void)findPrevious:(id)arg1;
@property BOOL hasNewInterestingOutput; // @synthesize hasNewInterestingOutput=_hasNewInterestingOutput;
- (void)hideFindBar:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
@property(readonly) NSMutableArray *inputHistoryForDebugger;
- (void)invalidate;
- (void)loadView;
- (void)replace:(id)arg1;
- (void)replaceAll:(id)arg1;
- (void)replaceAndFindNext:(id)arg1;
- (void)replaceAndFindPrevious:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
@property(readonly) NSView *scopeBarsBaseView;
@property BOOL shouldShowLayoutControl; // @synthesize shouldShowLayoutControl=_shouldShowLayoutControl;
- (void)showNextCommandFromHistory:(id)arg1;
- (void)showPreviousCommandFromHistory:(id)arg1 currentStringAfterPrompt:(id)arg2;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
@property(readonly) NSSegmentedControl *swapButton; // @synthesize swapButton=_swapButton;
- (id)textView:(id)arg1 menu:(id)arg2 forEvent:(id)arg3 atIndex:(unsigned long long)arg4;
@property(readonly) BOOL tracksInputHistoryForDebugger;
- (void)useSelectionForReplace:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)viewDidInstall;
- (void)viewWillUninstall;

// Remaining properties
@property(readonly) NSScrollView *scopeBarsAdjustableScrollView;

@end

